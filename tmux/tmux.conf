# cat << EOF > /dev/null
# -- general -------------------------------------------------------------------
set-option -g default-shell /usr/local/bin/fish
set -g default-terminal "screen-256color"
#set -g default-terminal "xterm-256color"
set -s escape-time 10 #faster command sequences
set -sg repeat-time 0 #increase repeat timeout
set -s focus-events on
setw -q -g utf8 on
set -g history-limit 5000 #boost history

# -- bind-key ------------------------------------------------------------------
unbind C-b
set -g prefix C-q
bind C-q send-prefix

bind-key e set-window-option synchronize-panes\; display-message "synchronize-panes is now #{?pane_synchronized,on,off}"
bind-key S-Left swap-window -t -1
bind-key S-Right swap-window -t +1
bind '%' split-window -h -c '#{pane_current_path}'  # Split panes horizontal
bind '"' split-window -v -c '#{pane_current_path}'  # Split panes vertically
bind c new-window -c '#{pane_current_path}' # Create new window

# -- display -------------------------------------------------------------------
setw -g automatic-rename on   # rename window to reflect current program

# -- status bar ----------------------------------------------------------------
set -g status-position top
set -g -q status-utf8 on

set -g status-interval 60
set -g status-justify 'centre'

set -g status-bg 'colour000'

set -g status-left-length 50
set -g status-right-length 50
set -g status-left "#[fg=#ffffff,bg=#0087ff] $TITLE #[fg=colour222,bg=colour238] #(whoami) #[bg=colour000] #[fg=colour198,bg=white] #(netstat -nr | grep -E 'default.*UGSc' | cut -d ' ' -f13) #[bg=colour000] #[fg=colour198,bg=white] #(ifconfig | grep -v '127.0.0.1' | grep 'inet ' | head -1 | cut -d ' ' -f2) "
set -g status-right "#[fg=#0000ff,bg=colour255,nobold,nounderscore,noitalics] #(networksetup -getairportnetwork en0) "

# set-window-option
setw -g window-status-format '#[fg=colour000,bg=colour255,nobold,nounderscore,noitalics] #W '
setw -g window-status-current-format "#[fg=colour000,bg=colour118,bold] #W "

# -- run scripe ----------------------------------------------------------------
# toggle mouse
bind m run "cut -c3- ~/.config/tmux/tmux.conf | sh -s _toggle_mouse"

# EOF
#
# # -- scripe ------------------------------------------------------------------
# # exit the script if any statement returns a non-true return value
# set -e
#
# export LC_NUMERIC=C
#
# __newline='
# '
#
# _toggle_mouse() {
#   old=$(tmux show -gv mouse)
#   new=""
#
#   if [ "$old" = "on" ]; then
#     new="off"
#   else
#     new="on"
#   fi
#
#   tmux set -g mouse $new \;\
#        display "mouse: $new"
# }
#
# "$@"
